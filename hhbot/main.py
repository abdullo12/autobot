# hhbot/main.py

import logging
logging.basicConfig(level=logging.DEBUG, format="%(asctime)s %(levelname)s %(name)s: %(message)s")

import threading

from fastapi import FastAPI, HTTPException
from hhbot.config import settings
from hhbot.auth import exchange_code_for_token
from hhbot.bot import build_bot  # –≤–∞—à –º–æ–¥—É–ª—å, –≥–¥–µ —Å–æ–∑–¥–∞—ë—Ç—Å—è Updater/Dispatcher

log = logging.getLogger(__name__)
app = FastAPI()
_bot_instance = None  # –≥–ª–æ–±–∞–ª—å–Ω–æ —Ö—Ä–∞–Ω–∏—Ç –≤–∞—à –±–æ—Ç


@app.get("/callback")
async def callback(code: str, state: int):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ OAuth-callback –æ—Ç HH.
    –ü—Ä–∏ —É—Å–ø–µ—Ö–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º {"status":"ok","msg": "..."},
    –ø—Ä–∏ –æ—à–∏–±–∫–µ ‚Äî HTTP 500 —Å –¥–µ—Ç–∞–ª—è–º–∏.
    """
    try:
        msg = await exchange_code_for_token(code, state)
        return {"status": "ok", "msg": msg}
    except Exception as e:
        log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–º–µ–Ω–µ code->token:", exc_info=e)
        raise HTTPException(status_code=500, detail="–û—à–∏–±–∫–∞ –ø—Ä–∏–≤—è–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è")


@app.on_event("startup")
def startup_bot():
    """
    –ó–∞–ø—É—Å–∫–∞–µ–º Telegram-–±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ: —Å–æ–∑–¥–∞—ë–º –ø–æ—Ç–æ–∫,
    —á—Ç–æ–±—ã .start_polling() –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞–ª Uvicorn.
    """
    global _bot_instance
    _bot_instance = build_bot()
    thread = threading.Thread(target=_bot_instance.start_polling, daemon=True)
    thread.start()
    log.info("‚úÖ Telegram-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ")


@app.on_event("shutdown")
def shutdown_bot():
    """
    –ü—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º polling.
    """
    global _bot_instance
    if _bot_instance and hasattr(_bot_instance, "stop_polling"):
        _bot_instance.stop_polling()
        log.info("üõë Telegram-–±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")


if __name__ == "__main__":
    import uvicorn

    uvicorn.run(
        "hhbot.main:app",
        host="0.0.0.0",
        port=settings.server_port,
        reload=True,
        log_level="info",
    )
